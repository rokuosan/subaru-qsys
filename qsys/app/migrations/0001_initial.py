# Generated by Django 4.2.2 on 2023-06-29 12:22

import django.core.validators
import django.db.models.deletion
import django_prometheus.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="AppUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        max_length=255,
                        unique=True,
                        validators=[
                            django.core.validators.MinLengthValidator(3),
                            django.core.validators.RegexValidator("^[a-zA-Z0-9]+$"),
                        ],
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_admin", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
            ],
            options={
                "verbose_name": "ユーザー",
                "verbose_name_plural": "ユーザー",
            },
            bases=(
                django_prometheus.models.ExportModelOperationsMixin("app_user"),
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="CtfInformation",
            fields=[
                ("ctf_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(help_text="CTF名", max_length=255)),
                ("description", models.TextField(help_text="CTF説明")),
                ("start_at", models.DateTimeField(help_text="開始日時")),
                ("end_at", models.DateTimeField(help_text="終了日時")),
            ],
            options={
                "verbose_name": "CTF情報",
                "verbose_name_plural": "CTF情報",
            },
            bases=(
                django_prometheus.models.ExportModelOperationsMixin("ctf_information"),
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="CtfQuestion",
            fields=[
                ("question_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(help_text="問題タイトル", max_length=255)),
                ("content", models.TextField(help_text="問題文", max_length=8191)),
                (
                    "explanation",
                    models.TextField(
                        blank=True, help_text="解説", max_length=8191, null=True
                    ),
                ),
                ("point", models.PositiveBigIntegerField(help_text="配点")),
                ("flag", models.CharField(help_text="フラグ", max_length=1023)),
                (
                    "file_path",
                    models.CharField(
                        blank=True, help_text="問題ファイルパス", max_length=1023, null=True
                    ),
                ),
                ("is_published", models.BooleanField(default=False, help_text="公開フラグ")),
                (
                    "is_practice",
                    models.BooleanField(default=False, help_text="練習問題フラグ"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "note",
                    models.TextField(
                        blank=True, help_text="備考", max_length=8191, null=True
                    ),
                ),
            ],
            options={
                "verbose_name": "CTF問題",
                "verbose_name_plural": "CTF問題",
            },
            bases=(
                django_prometheus.models.ExportModelOperationsMixin("ctf_question"),
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="CtfQuestionCategory",
            fields=[
                ("category_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "verbose_name": "カテゴリ",
                "verbose_name_plural": "カテゴリ",
            },
            bases=(
                django_prometheus.models.ExportModelOperationsMixin(
                    "ctf_question_category"
                ),
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="CtfQuestionDifficulty",
            fields=[
                (
                    "difficulty_id",
                    models.BigAutoField(primary_key=True, serialize=False),
                ),
                ("name", models.CharField(help_text="難易度名", max_length=255)),
            ],
            options={
                "verbose_name": "難易度",
                "verbose_name_plural": "難易度",
            },
            bases=(
                django_prometheus.models.ExportModelOperationsMixin(
                    "ctf_question_difficulty"
                ),
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="CtfTeam",
            fields=[
                ("team_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(help_text="チーム名", max_length=255)),
                ("is_admin", models.BooleanField(default=False, help_text="管理者チーム")),
            ],
            options={
                "verbose_name": "チーム",
                "verbose_name_plural": "チーム",
            },
            bases=(
                django_prometheus.models.ExportModelOperationsMixin("ctf_team"),
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="CtfScore",
            fields=[
                ("score_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("date", models.DateField(auto_now_add=True, help_text="日付")),
                ("point", models.PositiveIntegerField(help_text="ポイント")),
                (
                    "ctf",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.ctfinformation",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.ctfquestion",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "スコア",
                "verbose_name_plural": "スコア",
            },
            bases=(
                django_prometheus.models.ExportModelOperationsMixin("ctf_score"),
                models.Model,
            ),
        ),
        migrations.AddField(
            model_name="ctfquestion",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="app.ctfquestioncategory",
            ),
        ),
        migrations.AddField(
            model_name="ctfquestion",
            name="difficulty",
            field=models.ForeignKey(
                help_text="難易度",
                on_delete=django.db.models.deletion.CASCADE,
                to="app.ctfquestiondifficulty",
            ),
        ),
        migrations.CreateModel(
            name="CtfAnswerHistory",
            fields=[
                ("history_id", models.BigAutoField(primary_key=True, serialize=False)),
                ("content", models.CharField(help_text="回答内容", max_length=1023)),
                ("is_correct", models.BooleanField(default=False, help_text="正解フラグ")),
                ("answered_at", models.DateTimeField(auto_now_add=True)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app.ctfquestion",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "CTF問題回答履歴",
                "verbose_name_plural": "CTF問題回答履歴",
            },
            bases=(
                django_prometheus.models.ExportModelOperationsMixin(
                    "ctf_answer_history"
                ),
                models.Model,
            ),
        ),
        migrations.AddField(
            model_name="appuser",
            name="team",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="app.ctfteam",
            ),
        ),
        migrations.AddField(
            model_name="appuser",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
